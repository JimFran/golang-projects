swagger: "2.0"
info:
  version: "1.0.0"
  title: "User Management API"
  description: "API to manage users into a database with CRUD operations"
host: "localhost:8082"
basePath: "/"
schemes:
  - "http"
securityDefinitions:
  BearerAuth:
    type: apiKey
    in: header
    name: Authorization
security:
  - BearerAuth: []
paths:
  /users:
    get:
      summary: "Get a list of users"
      responses:
        200:
          description: "list of users"
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        500:
          description: "Internal error server"
    post:
      summary: "Add a user"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "User added successfully"
        400:
          description: "Invalid requesta"
        500:
          description: "Internal error server"
  /users/{id}:
    put:
      summary: "Update a user"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "User updated successfully"
        400:
          description: "Invalid request"
        500:
          description: "Internal error server"
    delete:
      summary: "Delete a user"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Usuario eliminado exitosamente"
        400:
          description: "Solicitud inv√°lida"
        500:
          description: "Error interno del servidor"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      email:
        type: "string"
